<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Delbert's Octopress Blog]]></title>
  <link href="http://cnDelbert.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://cnDelbert.github.io/"/>
  <updated>2014-04-24T14:32:53+08:00</updated>
  <id>http://cnDelbert.github.io/</id>
  <author>
    <name><![CDATA[Delbert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby 补充笔记 2]]></title>
    <link href="http://cnDelbert.github.io/blog/2014/04/08/ruby-note-review-2/"/>
    <updated>2014-04-08T21:11:59+08:00</updated>
    <id>http://cnDelbert.github.io/blog/2014/04/08/ruby-note-review-2</id>
    <content type="html"><![CDATA[<p>继续</p>

<!--more-->


<p>Ruby 中有以感叹号和问号结尾的方法。</p>

<p>问号被用于判断返回 Boolean 是否为真的方法，如 <code>Array.empty?</code>。<br>
叹号用来表示用到的方法要多加小心。一般不带叹号的方法返回调用该方法的一个拷贝，而带感叹号的则会修改原来的对象。</p>

<p>可以通过 <code>Hash.new</code> 方法来建立新的空的 hash。</p>

<p><code>.to_sym</code> 和 <code>.intern</code> 作用一样，都是讲字符串转换为 Symbol。</p>

<p>Hash 中 key 如果本身是一个单词，可以直接用 <code>key: value</code> 的形式，如果是多个单词的话，就要 <code>:"key word" =&gt; value</code> 了。貌似是这样的。</p>

<p>lrthw 中从来没有提到过 The Zen of Ruby。 Ruby 是一种很随意的语言，比如</p>

<p><code>ruby
puts "Delbert" if true
</code></p>

<p>和英语的读法差不多的杨泽，语法相当随意。</p>

<p>加一个<code>@</code>是实例变量，两个@ <code>@@</code>是类变量，加<code>$</code>的是全局变量。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 补充笔记 1]]></title>
    <link href="http://cnDelbert.github.io/blog/2014/04/08/ruby-note-review/"/>
    <updated>2014-04-08T14:53:48+08:00</updated>
    <id>http://cnDelbert.github.io/blog/2014/04/08/ruby-note-review</id>
    <content type="html"><![CDATA[<p>完成了 <em>Learn Ruby The Hard Way</em> ，但是在 Codecademy 上面的课程还是没有完成。今天抽空从头复习了一下，发现了不少在 lrthw 中没有提到的地方。</p>

<!--more-->


<h2>字符串方法</h2>

<p>``` ruby
.length
.reverse
.upcase
.downcase
.capitalize</p>

<p>.gsub!(/s/,&ldquo;th&rdquo;) # replace s with th, while gsub is short for <strong>g</strong>lobal <strong>sub</strong>stitution.
```</p>

<h2>多行注释</h2>

<p>``` ruby
=begin
注释
Multi-Line Comments
=end</p>

<h1>Single-Line Comments</h1>

<p>```</p>

<h2>控制流</h2>

<h3>if/else</h3>

<p><code>ruby
if true
  # do something
elsif
  # do something else
else
  # others
end
</code></p>

<h3>unless/else</h3>

<p><code>ruby
unless false
  # do something
elsif
  # do something else
else
  # others
end
</code></p>

<h2>循环</h2>

<h3>while</h3>

<p><code>ruby
while true
  # do something
end
</code></p>

<h3>until</h3>

<p><code>ruby
until false
  # do something
end
</code></p>

<h3>loop</h3>

<p><code>ruby
loop do
  next if true # equals continus
  # do something
  break if true
end
</code></p>

<h3>.each</h3>

<p>Multi-Line</p>

<p><code>ruby
array = [1, 2, 3]
array.each do |x|
  # do something
end
</code></p>

<p>Single-Line</p>

<p><code>ruby
object.each { |item| # Do something }
</code></p>

<h3>.times</h3>

<p><code>ruby
3.times{print "Delbert"} # print "Delbert" out for 3 times{print
</code></p>
]]></content>
  </entry>
  
</feed>
